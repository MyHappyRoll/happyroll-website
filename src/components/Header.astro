---
import Button from "./Button.astro";
import HLogo from "../images/h_logo.svg";
import HRLogoFull from "../images/hr_logo_full.svg";
---

<style>
  .header {
    margin: calc(1em + 1px) auto 0; /* visually compensate for the trick */
    height: 75px;
    position: sticky;
    top: -1px; /* trick the observer into seeing a viewport intersection */
    transition: all 200ms ease-in-out;
    z-index: 10;
    box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;
  }

  .is-stuck {
    width: 100%;
    max-width: 100%;
    border-radius: 0;
  }

  .header__inner-wrapper {
    max-width: 64rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0 auto;
  }

  .brand {
    text-decoration: none;
    color: var(--primary-1);
    display: flex;
    align-items: center;
  }

  .brand:hover {
    color: var(--primary-1);
  }

  .brand__logo {
    height: 3rem;
  }

  .is-stuck .brand__logo {
    display: inline-block;
  }

  .brand__happyroll {
    font-family: "Nunito Variable", sans-serif;
    font-weight: 900;
    width: 8rem;
    transition: width 200ms ease-in-out;
    overflow: hidden;
    white-space: nowrap;
  }

  .is-stuck .brand__happyroll {
    width: 0;
  }

  #menu {
    top: 76px;
    box-shadow: rgba(33, 35, 38, 0.1) 0px 10px 10px -10px;
  }

  @media screen and (max-width: 64rem) {
    .header {
      position: fixed;
      top: 0;
      margin: 0;
      width: 100%;
      border-radius: 0;
    }

    .brand__happyroll {
      width: 0;
    }

    .brand__logo {
      display: inline-block;
    }
  }
</style>

<header
  id="site-header"
  class="bg-white br5 header mw8 center pv2 ph2 ph4-ns flex items-center relative"
>
  <div class="header__inner-wrapper w-100">
    <!-- Left -->
    <div class="dn-l">
      <a class="flex items-center" href="/">
        <img src={HRLogoFull.src} alt="HappyRoll" width="160" /></a
      >
    </div>
    <div class="w-20 dn db-l">
      <a class="brand grow" href="/">
        <img class="brand__logo" src={HLogo.src} alt="HappyRoll" />
        <span class="brand__happyroll pl2 f3 primary-600">HappyRoll</span>
      </a>
    </div>
    <!-- Middle -->
    <div class="w-60 dn flex-l justify-center">
      <nav>
        <Button
          class="neutral-800"
          href="/pricing"
          variant="minimal"
          title="Pricing"
        />
        <Button
          class="neutral-800"
          href="/about"
          variant="minimal"
          title="About"
        />
        <Button
          class="neutral-800"
          href="/gallery"
          variant="minimal"
          title="Gallery"
        />
        <Button
          class="neutral-800"
          href="/blog"
          variant="minimal"
          title="Blog"
        />
      </nav>
    </div>
    <!-- Right -->
    <div class="w-20 flex justify-end">
      <div class="dn-l">
        <Button id="menuButton" variant="primary-outline" title="Menu" />
      </div>
      <div class="dn db-l">
        <Button variant="primary" href="#" title="Book a call" />
      </div>
    </div>
  </div>

  <div id="menu" class="dn absolute w-100 bg-white left-0 right-0 pb4 vh-100">
    <nav>
      <ul class="tc list f2 pl0">
        <li>
          <a href="/pricing" class="neutral-800 link pa3 w-100 dib">Pricing</a>
        </li>
        <li>
          <a href="/about" class="neutral-800 link pa3 w-100 dib">About</a>
        </li>
        <li>
          <a href="/gallery" class="neutral-800 link pa3 w-100 dib">Gallery</a>
        </li>
        <li>
          <a href="/blog" class="neutral-800 link pa3 w-100 dib">Blog</a>
        </li>
      </ul>

      <div class="flex justify-center">
        <Button variant="primary" href="#" title="Book a call" />
      </div>
    </nav>
  </div>
</header>

<script>
  let menu = document.getElementById("menu");
  let menuButton = document.getElementById("menuButton");

  const header = document.getElementById("site-header");
  if (header) {
    const observer = new IntersectionObserver(
      ([e]) => {
        e.target.classList.toggle(
          "is-stuck",
          // is intersecting the top but not the left or right
          e.boundingClientRect.width <= e.intersectionRect.width &&
            e.intersectionRatio < 1
        );
      },
      { threshold: 1 }
    );
    observer.observe(header);
  }

  // Mobile Menu
  menuButton?.addEventListener("click", (event) => {
    menu?.classList.contains("dn")
      ? menu.classList.remove("dn")
      : menu?.classList.add("dn");

    if (menu?.classList.contains("dn")) {
      menuButton.textContent = "Menu";
    } else {
      menuButton.textContent = "Close";
    }
  });
</script>
